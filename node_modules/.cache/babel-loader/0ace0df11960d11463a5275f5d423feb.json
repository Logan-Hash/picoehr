{"ast":null,"code":"var _jsxFileName = \"/Users/htetoonaing/Documents/My Project/Pico/picoEHR/src/components/Form/Input/DataList.js\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"../Button/Button\";\n\nconst DataList = ({\n  labelText,\n  required,\n  name,\n  id,\n  onFocus,\n  placeholder,\n  dataList,\n  doctors,\n  doctorDataList,\n  doctorTextArea,\n  addDoctors,\n  updateDoctors\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, labelText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-xs text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, labelText), required === true && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-red-500 ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 33\n    }\n  }, \"*\")) : null, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: doctorTextArea,\n    placeholder: \"All data you selected will show here...\",\n    className: \"block w-full focus:outline-none h-32 resize-none p-4 mb-2 bg-gray-100 rounded-lg focus:shadow-inner focus:bg-white border border-gray-400\",\n    name: name,\n    onChange: updateDoctors,\n    onFocus: onFocus,\n    required: required,\n    id: id,\n    value: doctors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-nowrap items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: doctorDataList,\n    className: \"block w-full focus:outline-none h-10 px-4 bg-gray-100 rounded-lg focus:shadow-inner focus:bg-white border border-gray-400\",\n    list: \"dataList\",\n    placeholder: placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"datalist\", {\n    id: \"dataList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, dataList.map((dl, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: dl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(Button, {\n    className: \"ml-4\",\n    type: \"button\",\n    onClick: addDoctors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default DataList;","map":{"version":3,"sources":["/Users/htetoonaing/Documents/My Project/Pico/picoEHR/src/components/Form/Input/DataList.js"],"names":["React","useState","FontAwesomeIcon","Button","DataList","labelText","required","name","id","onFocus","placeholder","dataList","doctors","doctorDataList","doctorTextArea","addDoctors","updateDoctors","map","dl","index"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,MAAP,MAAmB,kBAAnB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,SADgB;AAEhBC,EAAAA,QAFgB;AAGhBC,EAAAA,IAHgB;AAIhBC,EAAAA,EAJgB;AAKhBC,EAAAA,OALgB;AAMhBC,EAAAA,WANgB;AAOhBC,EAAAA,QAPgB;AAQhBC,EAAAA,OARgB;AAShBC,EAAAA,cATgB;AAUhBC,EAAAA,cAVgB;AAWhBC,EAAAA,UAXgB;AAYhBC,EAAAA;AAZgB,CAAD,KAaX;AACJ,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,SAAS,gBACR;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CA,SAA1C,CADF,EAEGC,QAAQ,KAAK,IAAb,iBAAqB;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFxB,CADQ,GAKN,IANN,eAOE;AACE,IAAA,GAAG,EAAEQ,cADP;AAEE,IAAA,WAAW,EAAC,yCAFd;AAGE,IAAA,SAAS,EAAC,2IAHZ;AAIE,IAAA,IAAI,EAAEP,IAJR;AAKE,IAAA,QAAQ,EAAES,aALZ;AAME,IAAA,OAAO,EAAEP,OANX;AAOE,IAAA,QAAQ,EAAEH,QAPZ;AAQE,IAAA,EAAE,EAAEE,EARN;AASE,IAAA,KAAK,EAAEI,OATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,eAkBE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,GAAG,EAAEC,cADP;AAEE,IAAA,SAAS,EAAC,2HAFZ;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,WAAW,EAAEH,WAJf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAOE;AAAU,IAAA,EAAE,EAAC,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,QAAQ,CAACM,GAAT,CAAa,CAACC,EAAD,EAAKC,KAAL,kBACZ,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAED,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADD,CADH,CAPF,CADF,eAgBE,oBAAC,MAAD;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAyB,IAAA,IAAI,EAAC,QAA9B;AAAuC,IAAA,OAAO,EAAEH,UAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhBF,CAlBF,CADF;AAyCD,CAvDD;;AAyDA,eAAeX,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"../Button/Button\";\n\nconst DataList = ({\n  labelText,\n  required,\n  name,\n  id,\n  onFocus,\n  placeholder,\n  dataList,\n  doctors,\n  doctorDataList,\n  doctorTextArea,\n  addDoctors,\n  updateDoctors,\n}) => {\n  return (\n    <React.Fragment>\n      {labelText ? (\n        <div className=\"p-1\">\n          <label className=\"text-xs text-gray-700\">{labelText}</label>\n          {required === true && <span className=\"text-red-500 ml-1\">*</span>}\n        </div>\n      ) : null}\n      <textarea\n        ref={doctorTextArea}\n        placeholder=\"All data you selected will show here...\"\n        className=\"block w-full focus:outline-none h-32 resize-none p-4 mb-2 bg-gray-100 rounded-lg focus:shadow-inner focus:bg-white border border-gray-400\"\n        name={name}\n        onChange={updateDoctors}\n        onFocus={onFocus}\n        required={required}\n        id={id}\n        value={doctors}\n      ></textarea>\n      <div className=\"flex flex-nowrap items-center\">\n        <div className=\"flex-grow\">\n          <input\n            ref={doctorDataList}\n            className=\"block w-full focus:outline-none h-10 px-4 bg-gray-100 rounded-lg focus:shadow-inner focus:bg-white border border-gray-400\"\n            list=\"dataList\"\n            placeholder={placeholder}\n          />\n          <datalist id=\"dataList\">\n            {dataList.map((dl, index) => (\n              <React.Fragment key={index}>\n                <option value={dl} />\n              </React.Fragment>\n            ))}\n          </datalist>\n        </div>\n        <Button className=\"ml-4\" type=\"button\" onClick={addDoctors}>\n          <FontAwesomeIcon icon=\"plus\" />\n        </Button>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default DataList;\n"]},"metadata":{},"sourceType":"module"}