{"ast":null,"code":"var _jsxFileName = \"/Users/htetoonaing/Documents/My Project/Pico/picoEHR/src/components/Form/Input/Input.js\";\nimport React from \"react\";\n\nconst Input = ({\n  labelText,\n  required,\n  className,\n  type,\n  placeholder,\n  value,\n  name,\n  onChange,\n  onFocus,\n  min,\n  max,\n  id,\n  inputRef,\n  error\n}) => {\n  console.log(\"input component\");\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, labelText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-xs text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, labelText), required === true && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-red-500 ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 33\n    }\n  }, \"*\")) : null, /*#__PURE__*/React.createElement(\"input\", {\n    className: `block focus:outline-none h-10 px-4 bg-gray-100 rounded-lg focus:shadow-inner focus:bg-white ${className ? className : null}`,\n    type: type,\n    ref: inputRef,\n    placeholder: placeholder,\n    value: value,\n    name: name,\n    onChange: onChange,\n    onFocus: onFocus,\n    required: required,\n    min: min,\n    max: max,\n    id: id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default React.memo(Input);","map":{"version":3,"sources":["/Users/htetoonaing/Documents/My Project/Pico/picoEHR/src/components/Form/Input/Input.js"],"names":["React","Input","labelText","required","className","type","placeholder","value","name","onChange","onFocus","min","max","id","inputRef","error","console","log","memo"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AACbC,EAAAA,SADa;AAEbC,EAAAA,QAFa;AAGbC,EAAAA,SAHa;AAIbC,EAAAA,IAJa;AAKbC,EAAAA,WALa;AAMbC,EAAAA,KANa;AAObC,EAAAA,IAPa;AAQbC,EAAAA,QARa;AASbC,EAAAA,OATa;AAUbC,EAAAA,GAVa;AAWbC,EAAAA,GAXa;AAYbC,EAAAA,EAZa;AAabC,EAAAA,QAba;AAcbC,EAAAA;AAda,CAAD,KAeR;AACJC,EAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGf,SAAS,gBACR;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CA,SAA1C,CADF,EAEGC,QAAQ,KAAK,IAAb,iBAAqB;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFxB,CADQ,GAKN,IANN,eAOE;AACE,IAAA,SAAS,EAAG,+FACVC,SAAS,GAAGA,SAAH,GAAe,IACzB,EAHH;AAIE,IAAA,IAAI,EAAEC,IAJR;AAKE,IAAA,GAAG,EAAES,QALP;AAME,IAAA,WAAW,EAAER,WANf;AAOE,IAAA,KAAK,EAAEC,KAPT;AAQE,IAAA,IAAI,EAAEC,IARR;AASE,IAAA,QAAQ,EAAEC,QATZ;AAUE,IAAA,OAAO,EAAEC,OAVX;AAWE,IAAA,QAAQ,EAAEP,QAXZ;AAYE,IAAA,GAAG,EAAEQ,GAZP;AAaE,IAAA,GAAG,EAAEC,GAbP;AAcE,IAAA,EAAE,EAAEC,EAdN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AA0BD,CA3CD;;AA6CA,eAAeb,KAAK,CAACkB,IAAN,CAAWjB,KAAX,CAAf","sourcesContent":["import React from \"react\";\n\nconst Input = ({\n  labelText,\n  required,\n  className,\n  type,\n  placeholder,\n  value,\n  name,\n  onChange,\n  onFocus,\n  min,\n  max,\n  id,\n  inputRef,\n  error,\n}) => {\n  console.log(\"input component\");\n  return (\n    <React.Fragment>\n      {labelText ? (\n        <div className=\"p-1\">\n          <label className=\"text-xs text-gray-700\">{labelText}</label>\n          {required === true && <span className=\"text-red-500 ml-1\">*</span>}\n        </div>\n      ) : null}\n      <input\n        className={`block focus:outline-none h-10 px-4 bg-gray-100 rounded-lg focus:shadow-inner focus:bg-white ${\n          className ? className : null\n        }`}\n        type={type}\n        ref={inputRef}\n        placeholder={placeholder}\n        value={value}\n        name={name}\n        onChange={onChange}\n        onFocus={onFocus}\n        required={required}\n        min={min}\n        max={max}\n        id={id}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Input);\n"]},"metadata":{},"sourceType":"module"}