{"ast":null,"code":"var _jsxFileName = \"/Users/htetoonaing/Documents/My Project/Pico/picoEHR/src/components/Form/Input/DataList.js\";\nimport React, { useState, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"../Button/Button\";\n\nconst DataList = () => {\n  const [selectedData, setSelectedData] = useState(\"\");\n  const myDataList = useRef();\n  const myTextArea = useRef();\n\n  const addSelectedData = () => {\n    if (selectedData === \"\") {\n      setSelectedData(myDataList.current.value);\n      myDataList.current.value = \"\";\n    } else {\n      setSelectedData(selectedData + \", \" + myDataList.current.value);\n      myDataList.current.value = \"\";\n    }\n  };\n\n  const updateSelectedData = e => {\n    setSelectedData(myTextArea.current.value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, this.props.labelText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-xs text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, this.props.labelText), this.props.required === true && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-red-500 ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, \"*\")) : null, /*#__PURE__*/React.createElement(\"textarea\", {\n    ref: this.myTextArea,\n    placeholder: \"All data you selected will show here...\",\n    className: \"block w-full focus:outline-none h-32 resize-none p-4 mb-2 bg-gray-100 rounded-lg focus:shadow-inner focus:bg-white border border-gray-400\",\n    name: this.props.name,\n    onChange: this.updateSelectedData,\n    onFocus: this.props.onFocus,\n    required: this.props.required,\n    id: this.props.id,\n    value: this.state.selectedData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-nowrap items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex-grow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    ref: this.myDataList,\n    className: \"block w-full focus:outline-none h-10 px-4 bg-gray-100 rounded-lg focus:shadow-inner focus:bg-white border border-gray-400\",\n    list: \"dataList\",\n    placeholder: this.props.placeholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"datalist\", {\n    id: \"dataList\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, this.props.dataList.map((dl, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: dl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(Button, {\n    className: \"ml-4\",\n    type: \"button\",\n    onClick: this.addSelectedData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default DataList;","map":{"version":3,"sources":["/Users/htetoonaing/Documents/My Project/Pico/picoEHR/src/components/Form/Input/DataList.js"],"names":["React","useState","useRef","FontAwesomeIcon","Button","DataList","selectedData","setSelectedData","myDataList","myTextArea","addSelectedData","current","value","updateSelectedData","e","props","labelText","required","name","onFocus","id","state","placeholder","dataList","map","dl","index"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Button from \"../Button/Button\";\n\nconst DataList = () => {\n  const [selectedData, setSelectedData] = useState(\"\");\n  const myDataList = useRef();\n  const myTextArea = useRef();\n  const addSelectedData = () => {\n    if (selectedData === \"\") {\n      setSelectedData(myDataList.current.value);\n      myDataList.current.value = \"\";\n    } else {\n      setSelectedData(selectedData + \", \" + myDataList.current.value);\n      myDataList.current.value = \"\";\n    }\n  };\n  const updateSelectedData = (e) => {\n    setSelectedData(myTextArea.current.value);\n  };\n\n  return (\n    <React.Fragment>\n      {this.props.labelText ? (\n        <div className=\"p-1\">\n          <label className=\"text-xs text-gray-700\">\n            {this.props.labelText}\n          </label>\n          {this.props.required === true && (\n            <span className=\"text-red-500 ml-1\">*</span>\n          )}\n        </div>\n      ) : null}\n      <textarea\n        ref={this.myTextArea}\n        placeholder=\"All data you selected will show here...\"\n        className=\"block w-full focus:outline-none h-32 resize-none p-4 mb-2 bg-gray-100 rounded-lg focus:shadow-inner focus:bg-white border border-gray-400\"\n        name={this.props.name}\n        onChange={this.updateSelectedData}\n        onFocus={this.props.onFocus}\n        required={this.props.required}\n        id={this.props.id}\n        value={this.state.selectedData}\n      ></textarea>\n      <div className=\"flex flex-nowrap items-center\">\n        <div className=\"flex-grow\">\n          <input\n            ref={this.myDataList}\n            className=\"block w-full focus:outline-none h-10 px-4 bg-gray-100 rounded-lg focus:shadow-inner focus:bg-white border border-gray-400\"\n            list=\"dataList\"\n            placeholder={this.props.placeholder}\n          />\n          <datalist id=\"dataList\">\n            {this.props.dataList.map((dl, index) => (\n              <React.Fragment key={index}>\n                <option value={dl} />\n              </React.Fragment>\n            ))}\n          </datalist>\n        </div>\n        <Button className=\"ml-4\" type=\"button\" onClick={this.addSelectedData}>\n          <FontAwesomeIcon icon=\"plus\" />\n        </Button>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default DataList;\n"]},"metadata":{},"sourceType":"module"}