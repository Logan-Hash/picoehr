{"ast":null,"code":"var _jsxFileName = \"/Users/htetoonaing/Documents/My Project/Pico/picoEHR/src/components/Table/Table.js\";\nimport React from 'react';\nimport TableFilter from './TableFilter';\nimport TableHeader from './TableHeader';\nimport TableDataRow from './TableDataRow';\nimport TablePagination from './TablePagination';\nconst style = {\n  backdropBlur: {\n    backdropFilter: \"blur(3px)\",\n    WebkitBackdropFilter: \"blur(3px)\",\n    background: \"rgba(255, 255, 255, 0.95)\"\n  }\n};\n\nclass Table extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      currentMinRow: 0,\n      currentMaxRow: this.props.rowLimit,\n      resultData: this.props.tableDataRow,\n      isTableFilterOpen: false\n    };\n    this.toggleTableFilter = this.toggleTableFilter.bind(this);\n    this.loadNextData = this.loadNextData.bind(this);\n    this.loadPrevData = this.loadPrevData.bind(this);\n    this.loadFistData = this.loadFistData.bind(this);\n    this.loadLastData = this.loadLastData.bind(this);\n    this.filteredData = this.filteredData.bind(this);\n  }\n\n  toggleTableFilter() {\n    this.setState({\n      isTableFilterOpen: !this.state.isTableFilterOpen\n    });\n  }\n\n  loadNextData() {\n    if (this.state.currentMaxRow < this.state.resultData.length) {\n      this.setState({\n        currentMinRow: this.state.currentMaxRow,\n        currentMaxRow: this.state.currentMaxRow + this.props.rowLimit\n      });\n    }\n  }\n\n  loadPrevData() {\n    if (this.state.currentMinRow > 0) {\n      this.setState({\n        currentMaxRow: this.state.currentMinRow,\n        currentMinRow: this.state.currentMinRow - this.props.rowLimit\n      });\n    }\n  }\n\n  loadFistData() {\n    if (this.state.currentMinRow > 0) {\n      this.setState({\n        currentMinRow: 0,\n        currentMaxRow: this.props.rowLimit\n      });\n    }\n  }\n\n  loadLastData() {\n    if (this.state.currentMaxRow < this.state.resultData.length) {\n      this.setState({\n        currentMinRow: this.state.resultData.length - this.state.resultData.length % this.props.rowLimit,\n        currentMaxRow: this.state.resultData.length\n      });\n    }\n  }\n\n  filteredData(query) {\n    this.setState({\n      resultData: this.props.tableDataRow.filter(tdr => tdr.reduce((prev, next) => (prev + next).toLowerCase()).includes(query))\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"overflow-auto pb-10 text-sm md:border md:bg-white md:rounded-lg md:shadow-md md:overflow-hidden md:pb-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: style.backdropBlur,\n      className: \"fixed bottom-0 left-0 p-4 w-full border-t text-center md:flex md:items-center md:p-1 md:justify-between md:static md:w-auto md:border-none z-20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, this.props.tableFilter && /*#__PURE__*/React.createElement(\"div\", {\n      className: `-mt-2 mb-3 md:mb-0 md:mt-0 ${this.state.isTableFilterOpen ? null : \"hidden md:block\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableFilter, {\n      filteredData: this.filteredData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(TablePagination, {\n      tableFilter: this.props.tableFilter,\n      toggleTableFilter: this.toggleTableFilter,\n      isTableFilterOpen: this.state.isTableFilterOpen,\n      loadNextData: this.loadNextData,\n      loadPrevData: this.loadPrevData,\n      loadFistData: this.loadFistData,\n      loadLastData: this.loadLastData,\n      rowCount: this.state.resultData.length,\n      minRow: this.state.currentMinRow,\n      maxRow: this.state.currentMaxRow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"block md:table w-full\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(TableHeader, {\n      tableHeader: this.props.tableHeader,\n      tableAction: this.props.tableAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }), this.state.resultData.slice(this.state.currentMinRow, this.state.currentMaxRow).map((row, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TableDataRow, {\n      tableHeader: this.props.tableHeader,\n      tableDataCol: row,\n      rowCount: index + this.state.currentMinRow + 1,\n      tableAction: this.props.tableAction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    })))));\n  }\n\n}\n\nexport default Table;","map":{"version":3,"sources":["/Users/htetoonaing/Documents/My Project/Pico/picoEHR/src/components/Table/Table.js"],"names":["React","TableFilter","TableHeader","TableDataRow","TablePagination","style","backdropBlur","backdropFilter","WebkitBackdropFilter","background","Table","Component","constructor","props","state","currentMinRow","currentMaxRow","rowLimit","resultData","tableDataRow","isTableFilterOpen","toggleTableFilter","bind","loadNextData","loadPrevData","loadFistData","loadLastData","filteredData","setState","length","query","filter","tdr","reduce","prev","next","toLowerCase","includes","render","tableFilter","tableHeader","tableAction","slice","map","row","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport TableFilter from './TableFilter';\nimport TableHeader from './TableHeader';\nimport TableDataRow from './TableDataRow';\nimport TablePagination from './TablePagination';\n\nconst style ={\n  backdropBlur : {\n    backdropFilter: \"blur(3px)\",\n    WebkitBackdropFilter: \"blur(3px)\",\n    background: \"rgba(255, 255, 255, 0.95)\"\n  }\n}\n\nclass Table extends React.Component {\n  constructor (props) {\n    super(props);\n    this.state = {\n      currentMinRow: 0,\n      currentMaxRow: this.props.rowLimit,\n      resultData: this.props.tableDataRow,\n      isTableFilterOpen: false\n    };\n    this.toggleTableFilter = this.toggleTableFilter.bind(this);\n    this.loadNextData = this.loadNextData.bind(this);\n    this.loadPrevData = this.loadPrevData.bind(this);\n    this.loadFistData = this.loadFistData.bind(this);\n    this.loadLastData = this.loadLastData.bind(this);\n    this.filteredData = this.filteredData.bind(this);\n  }\n  toggleTableFilter () {\n    this.setState({\n      isTableFilterOpen: !this.state.isTableFilterOpen\n    })\n  }\n  loadNextData () {\n    if(this.state.currentMaxRow < this.state.resultData.length) {\n      this.setState({\n        currentMinRow: this.state.currentMaxRow,\n        currentMaxRow: this.state.currentMaxRow + this.props.rowLimit \n      })\n    }\n  }\n  loadPrevData () {\n    if(this.state.currentMinRow > 0) {\n      this.setState({\n        currentMaxRow: this.state.currentMinRow,\n        currentMinRow: this.state.currentMinRow - this.props.rowLimit\n      })\n    }\n  }\n  loadFistData () {\n   if(this.state.currentMinRow > 0) {\n    this.setState({\n      currentMinRow: 0,\n      currentMaxRow: this.props.rowLimit\n    })\n   }\n  }\n  loadLastData () {\n    if(this.state.currentMaxRow < this.state.resultData.length) {\n      this.setState({\n        currentMinRow: this.state.resultData.length - (this.state.resultData.length % this.props.rowLimit),\n        currentMaxRow: this.state.resultData.length\n      })\n    }\n  }\n  filteredData(query) {\n    this.setState({\n      resultData: this.props.tableDataRow.filter(tdr => tdr.reduce((prev, next) => (prev+next).toLowerCase()).includes(query))\n    })\n  }\n  render () {\n    return (\n      <div className=\"overflow-auto pb-10 text-sm md:border md:bg-white md:rounded-lg md:shadow-md md:overflow-hidden md:pb-0\">\n        <div style={style.backdropBlur} className=\"fixed bottom-0 left-0 p-4 w-full border-t text-center md:flex md:items-center md:p-1 md:justify-between md:static md:w-auto md:border-none z-20\">\n          {this.props.tableFilter && \n            <div className={`-mt-2 mb-3 md:mb-0 md:mt-0 ${this.state.isTableFilterOpen ? null : \"hidden md:block\"}`}>\n              <TableFilter filteredData={this.filteredData} />\n            </div>\n          }\n          <TablePagination\n            tableFilter={ this.props.tableFilter }\n            toggleTableFilter = { this.toggleTableFilter }\n            isTableFilterOpen = { this.state.isTableFilterOpen }\n            loadNextData={ this.loadNextData }\n            loadPrevData={ this.loadPrevData }\n            loadFistData={ this.loadFistData }\n            loadLastData={ this.loadLastData }\n            rowCount={ this.state.resultData.length }\n            minRow={ this.state.currentMinRow }\n            maxRow={ this.state.currentMaxRow }\n          />\n        </div>\n        <div className=\"block md:table w-full\">\n          <TableHeader tableHeader={ this.props.tableHeader } tableAction={ this.props.tableAction } />\n          {this.state.resultData.slice(this.state.currentMinRow, this.state.currentMaxRow).map((row, index) => (\n            <React.Fragment key={ index }>\n              <TableDataRow\n                tableHeader={ this.props.tableHeader }\n                tableDataCol={ row } rowCount={ index+this.state.currentMinRow+1 }\n                tableAction={ this.props.tableAction }\n              />\n            </React.Fragment>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n"]},"metadata":{},"sourceType":"module"}