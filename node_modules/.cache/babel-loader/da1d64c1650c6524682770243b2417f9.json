{"ast":null,"code":"var _jsxFileName = \"/home/logan/picoehr/src/pages/PatientSetup.js\";\nimport React, { useState } from \"react\";\nimport Topbar from \"../components/Topbar/Topbar\";\nimport FormWithSection from \"../components/Form/FormWithSection/FormWithSection\";\nimport FormSection from \"../components/Form/FormWithSection/FormSection\";\nimport FormControl from \"../components/Form/FormControl/FormControl\";\nimport Input from \"../components/Form/Input/Input\";\nimport Select from \"../components/Form/Input/Select\";\nimport TextArea from \"../components/Form/Input/TextArea\";\nimport CheckBox from \"../components/Form/Input/Checkbox\";\nimport FormFooter from \"../components/Form/FormFooter/FormFooter\";\nimport Button from \"../components/Form/Button/Button\";\nimport PersonalInformationForm from \"../share/PersonalInformationForm\";\nimport validate from \"../validate/PatientSetupValidate\"; // import Axios from \"../share/Axios\";\n// import Spinner from \"../share/Spinner/Spinner\";\n\nfunction createInitialName(optionValue, optionText) {\n  return {\n    optionValue,\n    optionText\n  };\n}\n\nconsole.log(\"Patient setup above\"); //Sample Data for Select Input\n\nconst selectSampleData = [createInitialName(\"1\", \"description 1\"), createInitialName(\"2\", \"description 2\"), createInitialName(\"3\", \"description 3\"), createInitialName(\"4\", \"description 4\"), createInitialName(\"5\", \"description 5\")];\n\nconst PatientSetup = () => {\n  console.log(\"patient setup\");\n  const [information, setInformation] = useState({\n    id: \"\",\n    nrc: \"\",\n    name: \"\",\n    fatherName: \"\",\n    gender: \"\",\n    maritalStatus: \"\",\n    age: \"\",\n    dateOfBirth: \"\",\n    placeOfBirth: \"\",\n    location: \"\",\n    email: \"\",\n    occupation: \"\",\n    bloodType: \"\",\n    allergy: \"\",\n    remark: \"\",\n    active: false\n  });\n  const [errors, setErrors] = useState({}); // const [loading, setLoading] = useState(false);\n  // const [alert, setAlert] = useState({\n  //   success: \"\",\n  //   error: \"\",\n  // });\n\n  const handleOnChange = e => {\n    e.persist(); //current element\n\n    const target = e.target; //current element's name attribute\n\n    const name = target.name; //current element's value attribute (if checkbox, checked or not)\n\n    const value = target.name === \"active\" ? target.checked : target.value; //put to information\n\n    setInformation(information => ({ ...information,\n      [name]: value\n    })); // check validation for current element\n\n    let error = validate(target, true); //update errors's current element\n\n    setErrors(errors => ({ ...errors,\n      [name]: error\n    }));\n  };\n\n  const handleOnSavePatient = e => {\n    e.preventDefault(); //check validation for all information\n\n    let validatedErrors = validate(information); //push errors\n\n    setErrors(validatedErrors);\n    console.log(Object.values(validatedErrors)); //if no error\n\n    if (Object.values(validatedErrors).filter(value => value.length > 1).length === 0) {\n      console.log(\"no error\");\n      console.log(information); // setLoading(true);\n      // //push to api\n      // Axios.post(\"/patient\", information)\n      //   .then((res) => {\n      //     //loading to false\n      //     setLoading(false);\n      //     // set success alert and clear error alert\n      //     setAlert({\n      //       success: res.success,\n      //       error: \"\",\n      //     });\n      //     //clear errors\n      //     //\n      //   })\n      //   .catch((err) => {\n      //     //loading to false\n      //     setLoading(false);\n      //     // set error alert and clear success alert\n      //     setAlert({\n      //       success: \"\",\n      //       error: err.message,\n      //     });\n      //   });\n    }\n  }; //save data and print it\n\n\n  const saveAndPrint = e => {\n    // save data as submit\n    handleOnSavePatient(e); //print component using window.print()\n\n    const printableElements = document.getElementById(\"patientSetupDiv\").innerHTML;\n    const orderHtml = \"<html><head><title></title></head><body>\" + printableElements + \"</body></html>\";\n    const oldPage = document.body.innerHTML;\n    document.body.innerHTML = orderHtml;\n    window.print();\n    document.body.innerHTML = oldPage;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"patientSetupDiv\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Topbar, {\n    pageTitle: \"Patient Setup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-4 px-4 lg:px-0 w-full lg:w-4/5 xl:w-2/3 m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormWithSection, {\n    action: \"\",\n    onSubmit: handleOnSavePatient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PersonalInformationForm, {\n    information: information,\n    handleOnChange: handleOnChange,\n    selectSampleData: selectSampleData,\n    errors: errors,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormSection, {\n    sectionTitle: \"Address Information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"w-full\",\n    type: \"text\",\n    labelText: \"Location\",\n    name: \"location\",\n    value: information.location,\n    onChange: handleOnChange,\n    error: errors.location,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"w-full\",\n    type: \"email\",\n    labelText: \"Email\",\n    name: \"email\",\n    value: information.email,\n    onChange: handleOnChange,\n    error: errors.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"w-full\",\n    type: \"text\",\n    labelText: \"Occupation\",\n    name: \"occupation\",\n    value: information.occupation,\n    onChange: handleOnChange,\n    error: errors.occupation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(FormSection, {\n    sectionTitle: \"Medical Information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: \"w-24\",\n    labelText: \"Blood Type\",\n    optionData: selectSampleData,\n    preViewData: \"-\",\n    name: \"bloodType\",\n    value: information.bloodType,\n    onChange: handleOnChange,\n    error: errors.bloodType,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    className: \"w-full\",\n    labelText: \"Allergy\",\n    name: \"allergy\",\n    value: information.allergy,\n    onChange: handleOnChange,\n    error: errors.allergy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(FormSection, {\n    sectionTitle: \"Remark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    className: \"w-full\",\n    name: \"remark\",\n    value: information.remark,\n    onChange: handleOnChange,\n    error: errors.remark,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CheckBox, {\n    labelText: \"Active\",\n    name: \"active\",\n    checked: information.active,\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(FormFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"ml-2\",\n    type: \"button\",\n    onClick: saveAndPrint,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, \"Save & Print\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"ml-2\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 13\n    }\n  }, \"Save\")))));\n};\n\nexport default PatientSetup;","map":{"version":3,"sources":["/home/logan/picoehr/src/pages/PatientSetup.js"],"names":["React","useState","Topbar","FormWithSection","FormSection","FormControl","Input","Select","TextArea","CheckBox","FormFooter","Button","PersonalInformationForm","validate","createInitialName","optionValue","optionText","console","log","selectSampleData","PatientSetup","information","setInformation","id","nrc","name","fatherName","gender","maritalStatus","age","dateOfBirth","placeOfBirth","location","email","occupation","bloodType","allergy","remark","active","errors","setErrors","handleOnChange","e","persist","target","value","checked","error","handleOnSavePatient","preventDefault","validatedErrors","Object","values","filter","length","saveAndPrint","printableElements","document","getElementById","innerHTML","orderHtml","oldPage","body","window","print"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Topbar from \"../components/Topbar/Topbar\";\nimport FormWithSection from \"../components/Form/FormWithSection/FormWithSection\";\nimport FormSection from \"../components/Form/FormWithSection/FormSection\";\nimport FormControl from \"../components/Form/FormControl/FormControl\";\nimport Input from \"../components/Form/Input/Input\";\nimport Select from \"../components/Form/Input/Select\";\nimport TextArea from \"../components/Form/Input/TextArea\";\nimport CheckBox from \"../components/Form/Input/Checkbox\";\nimport FormFooter from \"../components/Form/FormFooter/FormFooter\";\nimport Button from \"../components/Form/Button/Button\";\nimport PersonalInformationForm from \"../share/PersonalInformationForm\";\nimport validate from \"../validate/PatientSetupValidate\";\n// import Axios from \"../share/Axios\";\n// import Spinner from \"../share/Spinner/Spinner\";\n\nfunction createInitialName(optionValue, optionText) {\n  return { optionValue, optionText };\n}\nconsole.log(\"Patient setup above\");\n//Sample Data for Select Input\nconst selectSampleData = [\n  createInitialName(\"1\", \"description 1\"),\n  createInitialName(\"2\", \"description 2\"),\n  createInitialName(\"3\", \"description 3\"),\n  createInitialName(\"4\", \"description 4\"),\n  createInitialName(\"5\", \"description 5\"),\n];\n\nconst PatientSetup = () => {\n  console.log(\"patient setup\");\n  const [information, setInformation] = useState({\n    id: \"\",\n    nrc: \"\",\n    name: \"\",\n    fatherName: \"\",\n    gender: \"\",\n    maritalStatus: \"\",\n    age: \"\",\n    dateOfBirth: \"\",\n    placeOfBirth: \"\",\n    location: \"\",\n    email: \"\",\n    occupation: \"\",\n    bloodType: \"\",\n    allergy: \"\",\n    remark: \"\",\n    active: false,\n  });\n  const [errors, setErrors] = useState({});\n  // const [loading, setLoading] = useState(false);\n  // const [alert, setAlert] = useState({\n  //   success: \"\",\n  //   error: \"\",\n  // });\n\n  const handleOnChange = (e) => {\n    e.persist();\n    //current element\n    const target = e.target;\n    //current element's name attribute\n    const name = target.name;\n    //current element's value attribute (if checkbox, checked or not)\n    const value = target.name === \"active\" ? target.checked : target.value;\n    //put to information\n    setInformation((information) => ({\n      ...information,\n      [name]: value,\n    }));\n    // check validation for current element\n    let error = validate(target, true);\n    //update errors's current element\n    setErrors((errors) => ({\n      ...errors,\n      [name]: error,\n    }));\n  };\n  const handleOnSavePatient = (e) => {\n    e.preventDefault();\n    //check validation for all information\n    let validatedErrors = validate(information);\n    //push errors\n    setErrors(validatedErrors);\n    console.log(Object.values(validatedErrors));\n    //if no error\n    if (\n      Object.values(validatedErrors).filter((value) => value.length > 1)\n        .length === 0\n    ) {\n      console.log(\"no error\");\n      console.log(information);\n      // setLoading(true);\n      // //push to api\n      // Axios.post(\"/patient\", information)\n      //   .then((res) => {\n      //     //loading to false\n      //     setLoading(false);\n      //     // set success alert and clear error alert\n      //     setAlert({\n      //       success: res.success,\n      //       error: \"\",\n      //     });\n      //     //clear errors\n      //     //\n      //   })\n      //   .catch((err) => {\n      //     //loading to false\n      //     setLoading(false);\n      //     // set error alert and clear success alert\n      //     setAlert({\n      //       success: \"\",\n      //       error: err.message,\n      //     });\n      //   });\n    }\n  };\n  //save data and print it\n  const saveAndPrint = (e) => {\n    // save data as submit\n    handleOnSavePatient(e);\n    //print component using window.print()\n    const printableElements = document.getElementById(\"patientSetupDiv\")\n      .innerHTML;\n    const orderHtml =\n      \"<html><head><title></title></head><body>\" +\n      printableElements +\n      \"</body></html>\";\n    const oldPage = document.body.innerHTML;\n    document.body.innerHTML = orderHtml;\n    window.print();\n    document.body.innerHTML = oldPage;\n  };\n  return (\n    <div id=\"patientSetupDiv\">\n      {/* {loading && <Spinner />}\n      {alert.success ? \"Success\" : null}\n      {alert.error ? \"Error\" : null} */}\n      <Topbar pageTitle=\"Patient Setup\" />\n      <div className=\"my-4 px-4 lg:px-0 w-full lg:w-4/5 xl:w-2/3 m-auto\">\n        <FormWithSection action=\"\" onSubmit={handleOnSavePatient}>\n          <PersonalInformationForm\n            information={information}\n            handleOnChange={handleOnChange}\n            selectSampleData={selectSampleData}\n            errors={errors}\n          />\n          <FormSection sectionTitle=\"Address Information\">\n            <FormControl>\n              <Input\n                className=\"w-full\"\n                type=\"text\"\n                labelText=\"Location\"\n                name=\"location\"\n                value={information.location}\n                onChange={handleOnChange}\n                error={errors.location}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                className=\"w-full\"\n                type=\"email\"\n                labelText=\"Email\"\n                name=\"email\"\n                value={information.email}\n                onChange={handleOnChange}\n                error={errors.email}\n              />\n            </FormControl>\n            <FormControl>\n              <Input\n                className=\"w-full\"\n                type=\"text\"\n                labelText=\"Occupation\"\n                name=\"occupation\"\n                value={information.occupation}\n                onChange={handleOnChange}\n                error={errors.occupation}\n              />\n            </FormControl>\n          </FormSection>\n          <FormSection sectionTitle=\"Medical Information\">\n            <FormControl>\n              <Select\n                className=\"w-24\"\n                labelText=\"Blood Type\"\n                optionData={selectSampleData}\n                preViewData=\"-\"\n                name=\"bloodType\"\n                value={information.bloodType}\n                onChange={handleOnChange}\n                error={errors.bloodType}\n              />\n            </FormControl>\n            <FormControl>\n              <TextArea\n                className=\"w-full\"\n                labelText=\"Allergy\"\n                name=\"allergy\"\n                value={information.allergy}\n                onChange={handleOnChange}\n                error={errors.allergy}\n              />\n            </FormControl>\n          </FormSection>\n          <FormSection sectionTitle=\"Remark\">\n            <FormControl>\n              <TextArea\n                className=\"w-full\"\n                name=\"remark\"\n                value={information.remark}\n                onChange={handleOnChange}\n                error={errors.remark}\n              />\n            </FormControl>\n            <FormControl>\n              <CheckBox\n                labelText=\"Active\"\n                name=\"active\"\n                checked={information.active}\n                onChange={handleOnChange}\n              />\n            </FormControl>\n          </FormSection>\n          <FormFooter>\n            <Button className=\"ml-2\" type=\"button\" onClick={saveAndPrint}>\n              Save & Print\n            </Button>\n            <Button className=\"ml-2\" type=\"submit\">\n              Save\n            </Button>\n          </FormFooter>\n        </FormWithSection>\n      </div>\n    </div>\n  );\n};\n\nexport default PatientSetup;\n"]},"metadata":{},"sourceType":"module"}