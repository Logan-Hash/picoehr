{"ast":null,"code":"var _jsxFileName = \"/Users/htetoonaing/Documents/My Project/Pico/picoEHR/src/components/Form/Input/DataList.js\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Button from '../Button/Button';\n\nclass DataList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.myDataList = React.createRef();\n    this.myTextArea = React.createRef();\n    this.state = {\n      selectedData: ''\n    };\n    this.addSelectedData = this.addSelectedData.bind(this);\n    this.updateSelectedData = this.updateSelectedData.bind(this);\n  }\n\n  addSelectedData() {\n    if (this.state.selectedData === '') {\n      this.setState({\n        selectedData: this.myDataList.current.value\n      });\n      this.myDataList.current.value = '';\n    } else {\n      this.setState({\n        selectedData: this.state.selectedData + ', ' + this.myDataList.current.value\n      });\n      this.myDataList.current.value = '';\n    }\n  }\n\n  updateSelectedData(e) {\n    this.setState({\n      selectedData: this.myTextArea.current.value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }\n    }, this.props.labelText ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-xs text-gray-700\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }\n    }, this.props.labelText), this.props.required === true && /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-red-500 ml-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }\n    }, \"*\")) : null, /*#__PURE__*/React.createElement(\"textarea\", {\n      ref: this.myTextArea,\n      placeholder: \"All data you selected will show here...\",\n      className: \"block w-full focus:outline-none h-32 resize-none p-4 mb-2 bg-gray-100 rounded-lg focus:shadow-inner focus:bg-white border border-gray-400\",\n      name: this.props.name,\n      onChange: this.updateSelectedData,\n      onFocus: this.props.onFocus,\n      required: this.props.required,\n      id: this.props.id,\n      value: this.state.selectedData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex flex-nowrap items-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"flex-grow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      ref: this.myDataList,\n      className: \"block w-full focus:outline-none h-10 px-4 bg-gray-100 rounded-lg focus:shadow-inner focus:bg-white border border-gray-400\",\n      list: \"dataList\",\n      placeholder: this.props.placeholder,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"datalist\", {\n      id: \"dataList\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, this.props.dataList.map((dl, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: dl,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }))))), /*#__PURE__*/React.createElement(Button, {\n      className: \"ml-4\",\n      type: \"button\",\n      onClick: this.addSelectedData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: \"plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default DataList;","map":{"version":3,"sources":["/Users/htetoonaing/Documents/My Project/Pico/picoEHR/src/components/Form/Input/DataList.js"],"names":["React","FontAwesomeIcon","Button","DataList","Component","constructor","props","myDataList","createRef","myTextArea","state","selectedData","addSelectedData","bind","updateSelectedData","setState","current","value","e","render","labelText","required","name","onFocus","id","placeholder","dataList","map","dl","index"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Button from '../Button/Button';\n\nclass DataList extends React.Component {\n  constructor (props) {\n    super(props);\n    this.myDataList = React.createRef();\n    this.myTextArea = React.createRef();\n    this.state = { selectedData: '' };\n    this.addSelectedData = this.addSelectedData.bind(this);\n    this.updateSelectedData = this.updateSelectedData.bind(this);\n  }\n  addSelectedData () {\n    if(this.state.selectedData === '') {\n      this.setState({\n        selectedData: this.myDataList.current.value\n      })\n      this.myDataList.current.value = ''\n    }\n    else {\n      this.setState({\n        selectedData: this.state.selectedData+', '+this.myDataList.current.value\n      })\n      this.myDataList.current.value = ''\n    }\n  }\n  updateSelectedData (e) {\n    this.setState({\n      selectedData: this.myTextArea.current.value\n    })\n  }\n  render () {\n    return (\n      <React.Fragment>\n        {this.props.labelText ? \n          <div className=\"p-1\">\n            <label className=\"text-xs text-gray-700\">{this.props.labelText}</label>\n            {this.props.required === true &&\n              <span className=\"text-red-500 ml-1\">*</span>\n            }\n          </div>\n          :\n          null\n        }\n        <textarea\n          ref={this.myTextArea}\n          placeholder=\"All data you selected will show here...\"\n          className=\"block w-full focus:outline-none h-32 resize-none p-4 mb-2 bg-gray-100 rounded-lg focus:shadow-inner focus:bg-white border border-gray-400\"\n          name={this.props.name}\n          onChange={this.updateSelectedData}\n          onFocus={this.props.onFocus}\n          required={this.props.required}\n          id={this.props.id}\n          value={this.state.selectedData}\n        ></textarea>\n        <div className=\"flex flex-nowrap items-center\">\n          <div className=\"flex-grow\">\n            <input\n              ref={this.myDataList}\n              className=\"block w-full focus:outline-none h-10 px-4 bg-gray-100 rounded-lg focus:shadow-inner focus:bg-white border border-gray-400\"\n              list=\"dataList\"\n              placeholder={this.props.placeholder}\n            />\n            <datalist id=\"dataList\">\n              {this.props.dataList.map((dl, index) => (\n                <React.Fragment key={index}>\n                  <option value={dl} />\n                </React.Fragment>\n              ))}\n            </datalist>\n          </div>\n          <Button className=\"ml-4\" type=\"button\" onClick={this.addSelectedData}>\n            <FontAwesomeIcon icon=\"plus\" />\n          </Button>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default DataList;\n"]},"metadata":{},"sourceType":"module"}