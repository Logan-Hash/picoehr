{"ast":null,"code":"var _jsxFileName = \"/Users/htetoonaing/Documents/My Project/Pico/picoEHR/src/components/Form/Input/Select.js\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Select = ({\n  labelText,\n  required,\n  className,\n  name,\n  id,\n  onChange,\n  value,\n  onFocus,\n  preViewData,\n  optionData,\n  inputRef,\n  error\n}) => {\n  console.log(\"select component\");\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, labelText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-xs text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, labelText), required === true && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-red-500 ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 33\n    }\n  }, \"*\")) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: `inline-block relative ${className ? className : null}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    className: \"block appearance-none w-full focus:outline-none h-10 pl-4 pr-10 bg-gray-100 rounded-lg focus:shadow-inner focus:bg-white border border-gray-400\",\n    name: name,\n    ref: inputRef,\n    id: id,\n    value: value,\n    onChange: onChange,\n    onFocus: onFocus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, preViewData), optionData.map((opt, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: opt.optionValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \" \", opt.optionText, \" \")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pointer-events-none absolute inset-y-0 right-0 flex items-center px-4 text-xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"chevron-down\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default React.memo(Select, (prevProps, nextProps) => prevProps.value === nextProps.value);","map":{"version":3,"sources":["/Users/htetoonaing/Documents/My Project/Pico/picoEHR/src/components/Form/Input/Select.js"],"names":["React","FontAwesomeIcon","Select","labelText","required","className","name","id","onChange","value","onFocus","preViewData","optionData","inputRef","error","console","log","map","opt","index","optionValue","optionText","memo","prevProps","nextProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAEA,MAAMC,MAAM,GAAG,CAAC;AACdC,EAAAA,SADc;AAEdC,EAAAA,QAFc;AAGdC,EAAAA,SAHc;AAIdC,EAAAA,IAJc;AAKdC,EAAAA,EALc;AAMdC,EAAAA,QANc;AAOdC,EAAAA,KAPc;AAQdC,EAAAA,OARc;AASdC,EAAAA,WATc;AAUdC,EAAAA,UAVc;AAWdC,EAAAA,QAXc;AAYdC,EAAAA;AAZc,CAAD,KAaT;AACJC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGb,SAAS,gBACR;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CA,SAA1C,CADF,EAEGC,QAAQ,KAAK,IAAb,iBAAqB;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFxB,CADQ,GAKN,IANN,eAOE;AAAK,IAAA,SAAS,EAAG,yBAAwBC,SAAS,GAAGA,SAAH,GAAe,IAAK,EAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,iJADZ;AAEE,IAAA,IAAI,EAAEC,IAFR;AAGE,IAAA,GAAG,EAAEO,QAHP;AAIE,IAAA,EAAE,EAAEN,EAJN;AAKE,IAAA,KAAK,EAAEE,KALT;AAME,IAAA,QAAQ,EAAED,QANZ;AAOE,IAAA,OAAO,EAAEE,OAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASE;AAAQ,IAAA,KAAK,EAAC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBC,WAAlB,CATF,EAUGC,UAAU,CAACK,GAAX,CAAe,CAACC,GAAD,EAAMC,KAAN,kBACd,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,KAAK,EAAED,GAAG,CAACE,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAkCF,GAAG,CAACG,UAAtC,MADF,CADD,CAVH,CADF,eAiBE;AAAK,IAAA,SAAS,EAAC,+EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,cAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjBF,CAPF,CADF;AA+BD,CA9CD;;AAgDA,eAAerB,KAAK,CAACsB,IAAN,CACbpB,MADa,EAEb,CAACqB,SAAD,EAAYC,SAAZ,KAA0BD,SAAS,CAACd,KAAV,KAAoBe,SAAS,CAACf,KAF3C,CAAf","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst Select = ({\n  labelText,\n  required,\n  className,\n  name,\n  id,\n  onChange,\n  value,\n  onFocus,\n  preViewData,\n  optionData,\n  inputRef,\n  error,\n}) => {\n  console.log(\"select component\");\n  return (\n    <React.Fragment>\n      {labelText ? (\n        <div className=\"p-1\">\n          <label className=\"text-xs text-gray-700\">{labelText}</label>\n          {required === true && <span className=\"text-red-500 ml-1\">*</span>}\n        </div>\n      ) : null}\n      <div className={`inline-block relative ${className ? className : null}`}>\n        <select\n          className=\"block appearance-none w-full focus:outline-none h-10 pl-4 pr-10 bg-gray-100 rounded-lg focus:shadow-inner focus:bg-white border border-gray-400\"\n          name={name}\n          ref={inputRef}\n          id={id}\n          value={value}\n          onChange={onChange}\n          onFocus={onFocus}\n        >\n          <option value=\"\">{preViewData}</option>\n          {optionData.map((opt, index) => (\n            <React.Fragment key={index}>\n              <option value={opt.optionValue}> {opt.optionText} </option>\n            </React.Fragment>\n          ))}\n        </select>\n        <div className=\"pointer-events-none absolute inset-y-0 right-0 flex items-center px-4 text-xs\">\n          <FontAwesomeIcon icon=\"chevron-down\" />\n        </div>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(\n  Select,\n  (prevProps, nextProps) => prevProps.value === nextProps.value\n);\n"]},"metadata":{},"sourceType":"module"}