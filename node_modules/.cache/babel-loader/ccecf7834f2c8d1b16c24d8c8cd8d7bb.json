{"ast":null,"code":"var _jsxFileName = \"/Users/htetoonaing/Documents/My Project/Pico/picoEHR/src/pages/PatientSetup.js\";\nimport React, { useState } from \"react\";\nimport Topbar from \"../components/Topbar/Topbar\";\nimport FormWithSection from \"../components/Form/FormWithSection/FormWithSection\";\nimport FormSection from \"../components/Form/FormWithSection/FormSection\";\nimport FormControl from \"../components/Form/FormControl/FormControl\";\nimport Input from \"../components/Form/Input/Input\";\nimport Select from \"../components/Form/Input/Select\";\nimport TextArea from \"../components/Form/Input/TextArea\";\nimport CheckBox from \"../components/Form/Input/Checkbox\";\nimport FormFooter from \"../components/Form/FormFooter/FormFooter\";\nimport Button from \"../components/Form/Button/Button\";\nimport PersonalInformationForm from \"../share/PersonalInformationForm\";\n\nfunction createInitialName(optionValue, optionText) {\n  return {\n    optionValue,\n    optionText\n  };\n} //Sample Data for Select Input\n\n\nconst selectSampleData = [createInitialName(\"1\", \"description 1\"), createInitialName(\"2\", \"description 2\"), createInitialName(\"3\", \"description 3\"), createInitialName(\"4\", \"description 4\"), createInitialName(\"5\", \"description 5\")];\n\nconst PatientSetup = () => {\n  console.log(\"patient setup\");\n  const [information, setInformation] = useState({\n    id: \"\",\n    nrc: \"\",\n    name: \"\",\n    fatherName: \"\",\n    gender: \"\",\n    maritalStatus: \"\",\n    age: \"\",\n    dateOfBirth: \"\",\n    placeOfBirth: \"\",\n    location: \"\",\n    email: \"\",\n    occupation: \"\",\n    bloodType: \"\",\n    allergy: \"\",\n    remark: \"\",\n    active: false\n  }); // const idRef = useRef();\n  // const nrcRef = useRef();\n  // const genderRef = useRef();\n  // const ageRef = useRef();\n  // const maritalStatusRef = useRef();\n  // const dateOfBirthRef = useRef();\n  // const placeOfBirthRef = useRef();\n  // const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(\"\");\n  // const [success, setSuccess] = useState(\"\");\n\n  const handleOnChange = e => {\n    e.persist();\n    const {\n      name,\n      value\n    } = e.target;\n    setInformation(information => ({ ...information,\n      [name]: value\n    }));\n  };\n\n  const handleOnSavePatient = e => {\n    e.preventDefault();\n    console.log(information);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Topbar, {\n    pageTitle: \"Patient Setup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"my-4 px-4 lg:px-0 w-full lg:w-4/5 xl:w-2/3 m-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormWithSection, {\n    action: \"\",\n    onSubmit: handleOnSavePatient,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PersonalInformationForm, {\n    information: information,\n    handleOnChange: handleOnChange,\n    selectSampleData: selectSampleData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(FormSection, {\n    sectionTitle: \"Address Information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"w-full\",\n    type: \"text\",\n    labelText: \"Location\",\n    name: \"nrc\",\n    value: information.nrc,\n    onChange: handleOnChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"w-full\",\n    type: \"email\",\n    labelText: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: \"w-full\",\n    type: \"text\",\n    labelText: \"Occupation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(FormSection, {\n    sectionTitle: \"Medical Information\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: \"w-24\",\n    labelText: \"Blood Type\",\n    optionData: selectSampleData,\n    preViewData: \"-\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    className: \"w-full\",\n    labelText: \"Allergy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(FormSection, {\n    sectionTitle: \"Remark\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextArea, {\n    className: \"w-full\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormControl, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CheckBox, {\n    labelText: \"Active\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(FormFooter, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"ml-2\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Save & Print\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"ml-2\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Save\")))));\n};\n\nexport default PatientSetup;","map":{"version":3,"sources":["/Users/htetoonaing/Documents/My Project/Pico/picoEHR/src/pages/PatientSetup.js"],"names":["React","useState","Topbar","FormWithSection","FormSection","FormControl","Input","Select","TextArea","CheckBox","FormFooter","Button","PersonalInformationForm","createInitialName","optionValue","optionText","selectSampleData","PatientSetup","console","log","information","setInformation","id","nrc","name","fatherName","gender","maritalStatus","age","dateOfBirth","placeOfBirth","location","email","occupation","bloodType","allergy","remark","active","handleOnChange","e","persist","value","target","handleOnSavePatient","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Topbar from \"../components/Topbar/Topbar\";\nimport FormWithSection from \"../components/Form/FormWithSection/FormWithSection\";\nimport FormSection from \"../components/Form/FormWithSection/FormSection\";\nimport FormControl from \"../components/Form/FormControl/FormControl\";\nimport Input from \"../components/Form/Input/Input\";\nimport Select from \"../components/Form/Input/Select\";\nimport TextArea from \"../components/Form/Input/TextArea\";\nimport CheckBox from \"../components/Form/Input/Checkbox\";\nimport FormFooter from \"../components/Form/FormFooter/FormFooter\";\nimport Button from \"../components/Form/Button/Button\";\nimport PersonalInformationForm from \"../share/PersonalInformationForm\";\n\nfunction createInitialName(optionValue, optionText) {\n  return { optionValue, optionText };\n}\n\n//Sample Data for Select Input\nconst selectSampleData = [\n  createInitialName(\"1\", \"description 1\"),\n  createInitialName(\"2\", \"description 2\"),\n  createInitialName(\"3\", \"description 3\"),\n  createInitialName(\"4\", \"description 4\"),\n  createInitialName(\"5\", \"description 5\"),\n];\n\nconst PatientSetup = () => {\n  console.log(\"patient setup\");\n  const [information, setInformation] = useState({\n    id: \"\",\n    nrc: \"\",\n    name: \"\",\n    fatherName: \"\",\n    gender: \"\",\n    maritalStatus: \"\",\n    age: \"\",\n    dateOfBirth: \"\",\n    placeOfBirth: \"\",\n    location: \"\",\n    email: \"\",\n    occupation: \"\",\n    bloodType: \"\",\n    allergy: \"\",\n    remark: \"\",\n    active: false,\n  });\n  // const idRef = useRef();\n  // const nrcRef = useRef();\n  // const genderRef = useRef();\n  // const ageRef = useRef();\n  // const maritalStatusRef = useRef();\n  // const dateOfBirthRef = useRef();\n  // const placeOfBirthRef = useRef();\n  // const [loading, setLoading] = useState(true);\n  // const [error, setError] = useState(\"\");\n  // const [success, setSuccess] = useState(\"\");\n\n  const handleOnChange = (e) => {\n    e.persist();\n    const { name, value } = e.target;\n    setInformation((information) => ({\n      ...information,\n      [name]: value,\n    }));\n  };\n  const handleOnSavePatient = (e) => {\n    e.preventDefault();\n    console.log(information);\n  };\n  return (\n    <React.Fragment>\n      <Topbar pageTitle=\"Patient Setup\" />\n      <div className=\"my-4 px-4 lg:px-0 w-full lg:w-4/5 xl:w-2/3 m-auto\">\n        <FormWithSection action=\"\" onSubmit={handleOnSavePatient}>\n          <PersonalInformationForm\n            information={information}\n            handleOnChange={handleOnChange}\n            selectSampleData={selectSampleData}\n          />\n          <FormSection sectionTitle=\"Address Information\">\n            <FormControl>\n              <Input\n                className=\"w-full\"\n                type=\"text\"\n                labelText=\"Location\"\n                name=\"nrc\"\n                value={information.nrc}\n                onChange={handleOnChange}\n              />\n            </FormControl>\n            <FormControl>\n              <Input className=\"w-full\" type=\"email\" labelText=\"Email\" />\n            </FormControl>\n            <FormControl>\n              <Input className=\"w-full\" type=\"text\" labelText=\"Occupation\" />\n            </FormControl>\n          </FormSection>\n          <FormSection sectionTitle=\"Medical Information\">\n            <FormControl>\n              <Select\n                className=\"w-24\"\n                labelText=\"Blood Type\"\n                optionData={selectSampleData}\n                preViewData=\"-\"\n              />\n            </FormControl>\n            <FormControl>\n              <TextArea className=\"w-full\" labelText=\"Allergy\" />\n            </FormControl>\n          </FormSection>\n          <FormSection sectionTitle=\"Remark\">\n            <FormControl>\n              <TextArea className=\"w-full\" />\n            </FormControl>\n            <FormControl>\n              <CheckBox labelText=\"Active\" />\n            </FormControl>\n          </FormSection>\n          <FormFooter>\n            <Button className=\"ml-2\" type=\"button\">\n              Save & Print\n            </Button>\n            <Button className=\"ml-2\" type=\"submit\">\n              Save\n            </Button>\n          </FormFooter>\n        </FormWithSection>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default PatientSetup;\n"]},"metadata":{},"sourceType":"module"}