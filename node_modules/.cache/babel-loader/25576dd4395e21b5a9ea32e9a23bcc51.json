{"ast":null,"code":"var _jsxFileName = \"/Users/htetoonaing/Documents/My Project/Pico/picoEHR/src/components/Form/Input/TextArea.js\";\nimport React from \"react\";\n\nconst TextArea = ({\n  labelText,\n  required,\n  className,\n  name,\n  id,\n  cols,\n  rows,\n  placeholder,\n  value,\n  onChange,\n  onFocus,\n  error\n}) => {\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, labelText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-xs text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }\n  }, labelText), required === true && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-red-500 ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, \"*\"), \" \", error ? /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-xs text-red-700 pt-0 mt-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, \"( \", error, \" )\") : null) : null, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: `block resize-none focus:outline-none h-32 p-4 bg-gray-100 rounded-lg focus:shadow-inner focus:bg-white border ${error ? \"border-red-400\" : \"border-gray-400\"} ${className ? className : null}`,\n    name: name,\n    id: id,\n    cols: cols,\n    rows: rows,\n    placeholder: placeholder,\n    value: value,\n    onChange: onChange,\n    onFocus: onFocus,\n    required: required,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default React.memo(TextArea, (prevProps, nextProps) => prevProps.value === nextProps.value && prevProps.error === nextProps.error);","map":{"version":3,"sources":["/Users/htetoonaing/Documents/My Project/Pico/picoEHR/src/components/Form/Input/TextArea.js"],"names":["React","TextArea","labelText","required","className","name","id","cols","rows","placeholder","value","onChange","onFocus","error","memo","prevProps","nextProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAChBC,EAAAA,SADgB;AAEhBC,EAAAA,QAFgB;AAGhBC,EAAAA,SAHgB;AAIhBC,EAAAA,IAJgB;AAKhBC,EAAAA,EALgB;AAMhBC,EAAAA,IANgB;AAOhBC,EAAAA,IAPgB;AAQhBC,EAAAA,WARgB;AAShBC,EAAAA,KATgB;AAUhBC,EAAAA,QAVgB;AAWhBC,EAAAA,OAXgB;AAYhBC,EAAAA;AAZgB,CAAD,KAaX;AACJ,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,SAAS,gBACR;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,uBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA0CA,SAA1C,CADF,EAEGC,QAAQ,KAAK,IAAb,iBACC;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAHJ,EAIK,GAJL,EAKGU,KAAK,gBACJ;AAAO,IAAA,SAAS,EAAC,gCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKA,KADL,OADI,GAIF,IATN,CADQ,GAYN,IAbN,eAcE;AACE,IAAA,SAAS,EAAG,iHACVA,KAAK,GAAG,gBAAH,GAAsB,iBAC5B,IAAGT,SAAS,GAAGA,SAAH,GAAe,IAAK,EAHnC;AAIE,IAAA,IAAI,EAAEC,IAJR;AAKE,IAAA,EAAE,EAAEC,EALN;AAME,IAAA,IAAI,EAAEC,IANR;AAOE,IAAA,IAAI,EAAEC,IAPR;AAQE,IAAA,WAAW,EAAEC,WARf;AASE,IAAA,KAAK,EAAEC,KATT;AAUE,IAAA,QAAQ,EAAEC,QAVZ;AAWE,IAAA,OAAO,EAAEC,OAXX;AAYE,IAAA,QAAQ,EAAET,QAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,CADF;AA+BD,CA7CD;;AA+CA,eAAeH,KAAK,CAACc,IAAN,CACbb,QADa,EAEb,CAACc,SAAD,EAAYC,SAAZ,KACED,SAAS,CAACL,KAAV,KAAoBM,SAAS,CAACN,KAA9B,IAAuCK,SAAS,CAACF,KAAV,KAAoBG,SAAS,CAACH,KAH1D,CAAf","sourcesContent":["import React from \"react\";\n\nconst TextArea = ({\n  labelText,\n  required,\n  className,\n  name,\n  id,\n  cols,\n  rows,\n  placeholder,\n  value,\n  onChange,\n  onFocus,\n  error,\n}) => {\n  return (\n    <React.Fragment>\n      {labelText ? (\n        <div className=\"p-1\">\n          <label className=\"text-xs text-gray-700\">{labelText}</label>\n          {required === true && (\n            <span className=\"text-red-500 ml-1\">*</span>\n          )}{\" \"}\n          {error ? (\n            <label className=\"text-xs text-red-700 pt-0 mt-0\">\n              ( {error} )\n            </label>\n          ) : null}\n        </div>\n      ) : null}\n      <textarea\n        className={`block resize-none focus:outline-none h-32 p-4 bg-gray-100 rounded-lg focus:shadow-inner focus:bg-white border ${\n          error ? \"border-red-400\" : \"border-gray-400\"\n        } ${className ? className : null}`}\n        name={name}\n        id={id}\n        cols={cols}\n        rows={rows}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n        onFocus={onFocus}\n        required={required}\n      ></textarea>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(\n  TextArea,\n  (prevProps, nextProps) =>\n    prevProps.value === nextProps.value && prevProps.error === nextProps.error\n);\n"]},"metadata":{},"sourceType":"module"}