{"ast":null,"code":"var _jsxFileName = \"/Users/htetoonaing/Documents/My Project/Pico/picoEHR/src/components/Form/Input/Checkbox.js\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst CheckBox = () => {\n  const [checked, setChecked] = useState(false);\n\n  const handleCheckboxChange = () => {\n    setChecked(!checked);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"flex flex-nowrap items-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-5 h-5 relative overflow-hidden cursor-pointer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"w-full h-full appearance-none focus:outline-none\",\n    checked: this.state.checked,\n    onChange: this.handleCheckboxChange,\n    name: this.props.name,\n    value: this.props.value,\n    id: this.props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: `pointer-events-none w-full h-full border absolute top-0 left-0 flex items-center justify-center text-xs text-white rounded shadow-inner ${this.state.checked ? \"bg-green-500 border-green-500\" : \"bg-gray-200 border-gray-400\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, this.state.checked ? /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: \"check\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 35\n    }\n  }) : null)), this.props.labelText ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"ml-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"text-xs font-bold text-gray-700\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, this.props.labelText), this.props.required === true && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"text-red-500 ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \"*\")) : null));\n};\n\nexport default CheckBox;","map":{"version":3,"sources":["/Users/htetoonaing/Documents/My Project/Pico/picoEHR/src/components/Form/Input/Checkbox.js"],"names":["React","useState","FontAwesomeIcon","CheckBox","checked","setChecked","handleCheckboxChange","state","props","name","value","id","labelText","required"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;;AACA,QAAMK,oBAAoB,GAAG,MAAM;AACjCD,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD,GAFD;;AAGA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,iDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,SAAS,EAAC,kDAFZ;AAGE,IAAA,OAAO,EAAE,KAAKG,KAAL,CAAWH,OAHtB;AAIE,IAAA,QAAQ,EAAE,KAAKE,oBAJjB;AAKE,IAAA,IAAI,EAAE,KAAKE,KAAL,CAAWC,IALnB;AAME,IAAA,KAAK,EAAE,KAAKD,KAAL,CAAWE,KANpB;AAOE,IAAA,EAAE,EAAE,KAAKF,KAAL,CAAWG,EAPjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAUE;AACE,IAAA,SAAS,EAAG,2IACV,KAAKJ,KAAL,CAAWH,OAAX,GACI,+BADJ,GAEI,6BACL,EALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOG,KAAKG,KAAL,CAAWH,OAAX,gBAAqB,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAC,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAArB,GAAwD,IAP3D,CAVF,CADF,EAqBG,KAAKI,KAAL,CAAWI,SAAX,gBACC;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,iCAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,KAAKJ,KAAL,CAAWI,SADd,CADF,EAIG,KAAKJ,KAAL,CAAWK,QAAX,KAAwB,IAAxB,iBACC;AAAM,IAAA,SAAS,EAAC,mBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SALJ,CADD,GASG,IA9BN,CADF,CADF;AAoCD,CAzCD;;AA2CA,eAAeV,QAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst CheckBox = () => {\n  const [checked, setChecked] = useState(false);\n  const handleCheckboxChange = () => {\n    setChecked(!checked);\n  };\n  return (\n    <React.Fragment>\n      <div className=\"flex flex-nowrap items-center\">\n        <div className=\"w-5 h-5 relative overflow-hidden cursor-pointer\">\n          <input\n            type=\"checkbox\"\n            className=\"w-full h-full appearance-none focus:outline-none\"\n            checked={this.state.checked}\n            onChange={this.handleCheckboxChange}\n            name={this.props.name}\n            value={this.props.value}\n            id={this.props.id}\n          />\n          <div\n            className={`pointer-events-none w-full h-full border absolute top-0 left-0 flex items-center justify-center text-xs text-white rounded shadow-inner ${\n              this.state.checked\n                ? \"bg-green-500 border-green-500\"\n                : \"bg-gray-200 border-gray-400\"\n            }`}\n          >\n            {this.state.checked ? <FontAwesomeIcon icon=\"check\" /> : null}\n          </div>\n        </div>\n        {this.props.labelText ? (\n          <div className=\"ml-2\">\n            <label className=\"text-xs font-bold text-gray-700\">\n              {this.props.labelText}\n            </label>\n            {this.props.required === true && (\n              <span className=\"text-red-500 ml-1\">*</span>\n            )}\n          </div>\n        ) : null}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default CheckBox;\n"]},"metadata":{},"sourceType":"module"}